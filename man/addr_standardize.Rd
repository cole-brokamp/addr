% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hash.R, R/standardize.R
\name{addr_hash}
\alias{addr_hash}
\alias{addr_standardize}
\title{Address hashing (hashdress)}
\usage{
addr_hash(
  x,
  tags = c("AddressNumber", "StreetName", "StreetNamePostType", "PlaceName", "StateName",
    "ZipCode"),
  five_digit_zip = TRUE,
  expand_street_name_post_type = TRUE,
  clean_address_text = TRUE
)

addr_standardize(
  x,
  tags = c("AddressNumber", "StreetName", "StreetNamePostType", "PlaceName", "StateName",
    "ZipCode"),
  five_digit_zip = TRUE,
  expand_street_name_post_type = TRUE,
  clean_address_text = TRUE,
  collapse = TRUE
)
}
\arguments{
\item{x}{a character vector of address strings}

\item{tags}{a character vector of tag names to be used, in order, to create the standardized address}

\item{five_digit_zip}{logical; return only the first five digits of the parsed ZIP code?}

\item{expand_street_name_post_type}{logical; use \code{expand_post_type()} to expand street type abbreviations}

\item{clean_address_text}{logical; clean addresses prior to tagging with \code{addr_clean()}?}

\item{collapse}{logical; combine standardized tags to output a single string per address}
}
\value{
a character vector of standardized address strings or, if \code{collapse} is \code{FALSE},
a list of character vectors with address tags in \code{tags} for each address string in \code{x}
}
\description{
Convert messy, real-world mailing addresses into
standardized addresses (\code{addr_standarize()}) and
further hash these addresses (\code{addr_hash()}) for
comparison and lookup. Specific tags are separated by spaces; e.g.,
\verb{\{AddressNumber\} \{StreetName\} \{StreetNamePostType\} \{PlaceName\} \{StateName\} \{ZipCode\}}.
By default, all address tags are converted to lower case,
street name post types are expanded
(e.g., "str" to "street" and "ave" to "avenue"),
and only the first five digits of the ZIP Code are used.
If any address tags are missing
(except for \code{StreetNamePostType}), then a missing
standardized address or hashdress will be returned.
In the case of an address having more than one word for a tag
(e.g., "Riva Ridge" for \code{StreetName}),
then these are concatenated together, separated by a space
in the order they appeared in the address.
For \code{addr_hash()} addresses are standardized and then
hashed using the md5 algorithm via \code{digest::hash()}
}
\examples{
addr_hash(c(
  "224 Woolper Avenue Apt 2 Cincinnati OH 45220",
  "224 wOoLpEr Avenue Cincinnati OH 45220",
  "224 Woolper Avenue Apt #2 Cincinnati OH 45220",
  "224 Woolper Ave Cincinnati OH 45220",
  "224 Woolper Av. Cincinnati OH 45220"
))
addr_standardize(
  x = c(
    "3333 Burnet Avenue Apt 2 Cincinnati OH 45220",
    "3333 bUrNeT Avenue Cincinnati OH 45220",
    "3333 Burnet Avenue Apt #2 Cincinnati OH 45220",
    "3333 Burnet Ave Cincinnati OH 45220",
    "3333 Burnet Av. Cincinnati OH 45220",
    "3333 Burnet Avenue Cincinnati 45220"
  )
)
}
