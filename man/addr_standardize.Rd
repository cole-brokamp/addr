% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/standardize.R
\name{addr_standardize}
\alias{addr_standardize}
\title{Address standardization}
\usage{
addr_standardize(
  x,
  tags = c("AddressNumber", "StreetName", "StreetNamePostType", "PlaceName", "StateName",
    "ZipCode"),
  clean_address_text = TRUE,
  expand_street_name_post_type = TRUE,
  five_digit_zip = TRUE
)
}
\arguments{
\item{x}{a character vector of address strings}

\item{tags}{a character vector of tag names to be used, in order, to create the standardized address
(see \code{addr_tag()} for all possibilities)}

\item{clean_address_text}{logical; use \code{clean_address_text()} to clean addresses prior to tagging?}

\item{expand_street_name_post_type}{logical; use \code{expand_post_type()} to expand \code{StreetNamePostType} tags?}

\item{five_digit_zip}{logical; return only the first five digits of the parsed \code{ZipCode} tag?}
}
\value{
a list the same length as x, where each item is a character vector of address tags specified in \code{tags}
}
\description{
Convert messy, real-world mailing addresses into standardized address tags for comparison and lookup.
By default, address strings are cleaned with \code{addr_clean()}, the ZIP codes are restricted to the first
five digits, and the street name post types are expanded (e.g., "Ave" -> "Avenue").
In the case of an address having more than one word for a tag (e.g., "Riva Ridge" for \code{StreetName}),
then these are concatenated together, separated by a space in the order they appeared in the address.
}
\examples{
addr_standardize(
  x = c(
    "3333 Burnet Avenue Apt 2 Cincinnati OH 45220",
    "3333 bUrNeT Avenue Cincinnati OH 45220",
    "3333 Burnet Avenue Apt #2 Cincinnati OH 45220",
    "3333 Burnet Ave Cincinnati OH 45220",
    "3333 Burnet Av. Cincinnati OH 45220",
    "3333 Burnet Avenue Cincinnati 45220"
  )
)
}
