% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/addr_match.R
\name{addr_match}
\alias{addr_match}
\alias{addr_match_street_name_and_number}
\alias{addr_match_street}
\title{matching addr vectors}
\usage{
addr_match(
  x,
  ref_addr,
  stringdist_match = c("osa_lt_1", "exact"),
  match_street_type = TRUE,
  simplify = TRUE
)

addr_match_street_name_and_number(x, ref_addr, ...)

addr_match_street(
  x,
  ref_addr,
  stringdist_match = c("osa_lt_1", "exact"),
  match_street_type = TRUE
)
}
\arguments{
\item{x}{an addr vector to match}

\item{ref_addr}{an addr vector to search for matches in}

\item{stringdist_match}{method for determining string match of street name:
"osa_lt_1" requires an optimized string distance less than 1; "exact" requires an exact match}

\item{match_street_type}{logical; require street type to be identical to match?}

\item{simplify}{logical; randomly select one addr from multi-matches and return an
addr() vector instead of a list? (empty addr vectors and NULL values are converted
to NA)}

\item{...}{specific matching options passed on to \code{addr_match_street()}}
}
\value{
for \code{addr_match()} and \code{addr_match_street_name_number()},
a named list of possible addr matches for each addr in \code{x}

for addr_match_street, a list of possible addr matches for each addr in \code{x} (as \code{ref_addr} indices)
}
\description{
For an addr vector, the string distances are calculated between a reference addr vector (\code{ref_addr}).
A list of matching reference addr vectors less than or equal to the specified
\href{https://en.wikipedia.org/wiki/Damerau\%E2\%80\%93Levenshtein_distance#Optimal_string_alignment_distance}{optimal string alignment}
distances are returned.
See \code{stringdist::stringdist-metrics} for more details on string metrics and the optimal string alignment (\code{osa}) method.
}
\examples{
addr(c("3333 Burnet Ave Cincinnati OH 45229", "5130 RAPID RUN RD CINCINNATI OHIO 45238")) |>
  addr_match(cagis_addr()$cagis_addr)

addr(c("3333 Burnet Ave Cincinnati OH 45229", "5130 RAPID RUN RD CINCINNATI OHIO 45238")) |>
  addr_match(cagis_addr()$cagis_addr, simplify = FALSE) |>
  tibble::enframe(name = "input_addr", value = "ca") |>
  dplyr::mutate(ca = purrr::list_c(ca)) |>
  dplyr::left_join(cagis_addr(), by = c("ca" = "cagis_addr")) |>
  tidyr::unnest(cols = c(cagis_addr_data)) |>
  dplyr::select(-ca, -cagis_address)
}
