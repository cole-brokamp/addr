% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/addr_geocode.R
\name{addr_match_geocode}
\alias{addr_match_geocode}
\title{geocode addr vectors}
\usage{
addr_match_geocode(
  x,
  ref_addr = cagis_addr()$cagis_addr,
  ref_s2,
  county = "39061",
  year = "2022",
  ...
)
}
\arguments{
\item{x}{an addr vector to geocode}

\item{ref_addr}{an addr vector to search for matches in}

\item{ref_s2}{a s2_cell vector of locations for each ref_addr}

\item{county}{character county identifer for TIGER street range files to search for matches in}

\item{year}{character year for TIGER street range files to search for matches in}

\item{...}{passed to \code{addr_match} (i.e., \code{stringdist_match}, \code{match_street_type})}
}
\value{
a s2_cell vector
}
\description{
Addresses are matched to a set of reference addresses; if unmatched,
they are next matched to TIGER street ranges by number and street name, returning the centroid
of the (unionized) matched street range(s).
}
\details{
Performance was compared to the degauss geocoder (see \verb{/inst/compare_geocoding_to_degauss.R}) using
real-world addresses in \code{voter_addresses()}.
Match success rates were highly similar:\tabular{llrl}{
   addr_matched \tab degauss_matched \tab n \tab perc \cr
   TRUE \tab TRUE \tab 224974 \tab 92.9\% \cr
   FALSE \tab TRUE \tab 13713 \tab 5.7\% \cr
   FALSE \tab FALSE \tab 2687 \tab 1.1\% \cr
   TRUE \tab FALSE \tab 759 \tab 0.3\% \cr
}


Among those that were geocoded by both, 97.7\% were geocoded to the same census tract:\tabular{llrll}{
   ct_agree \tab bg_agree \tab n \tab s2_dist_ptiles (5th, 25th, 50th, 75th, 95th) \tab perc \cr
   TRUE \tab TRUE \tab 217176 \tab 14.7, 24.3, 39, 68.9, 153.6 \tab 96.5\% \cr
   FALSE \tab FALSE \tab 5067 \tab 21.9, 40.8, 212.5, 6616.5, 20222.2 \tab 2.3\% \cr
   TRUE \tab FALSE \tab 2731 \tab 19.6, 28.6, 41.2, 95.1, 569.8 \tab 1.2\% \cr
}
}
\examples{
cagis_s2 <-
  cagis_addr()$cagis_addr_data |>
    purrr::modify_if(\(.) length(.) > 0 && nrow(.) > 1, dplyr::slice_sample, n = 1) |>
      purrr::map_vec(purrr::pluck, "cagis_s2", .default = NA, .ptype = s2::s2_cell())
addr_match_geocode(x = , ref_s2 = cagis_s2)
}
